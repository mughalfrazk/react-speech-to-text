{"version":3,"sources":["components/Dictaphone.js","App.js","index.js"],"names":["Dictaphone","useSpeechRecognition","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","useState","inputText","setInputText","useEffect","className","type","rows","value","onChange","e","target","onClick","SpeechRecognition","startListening","size","Fragment","stopListening","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA2DeA,EAjDI,WACjB,MAKIC,iCAJFC,EADF,EACEA,WACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,gBACAC,EAJF,EAIEA,iCAGF,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,OAJAC,qBAAU,WACRD,EAAaN,KACZ,CAACA,IAECG,EAKH,sBAAKK,UAAU,qEAAf,UACE,qBAAKA,UAAS,kBAAaP,EAAY,SAAW,MAClD,qBAAKO,UAAS,kBAAaP,EAAY,SAAW,MAClD,0BACEQ,KAAK,OACLC,KAAK,IACLF,UAAU,kCACVG,MAAON,EACPO,SAAU,SAACC,GAAD,OAAOP,EAAaO,EAAEC,OAAOH,UAEzC,sBAAKH,UAAU,eAAf,UACE,wBAAQA,UAAU,MAAMO,QAASC,IAAkBC,eAAnD,SACE,cAAC,IAAD,CAAeC,KAAM,OAEtBjB,EACC,eAAC,IAAMkB,SAAP,WACE,wBAAQX,UAAU,MAAMO,QAASC,IAAkBI,cAAnD,SACE,cAAC,IAAD,CAASF,KAAM,OAEjB,wBAAQV,UAAU,MAAMO,QAASb,EAAjC,SACE,cAAC,IAAD,CAASgB,KAAM,UAInB,SA5BC,sBAAMV,UAAU,KAAhB,0DClBIa,EAJH,WACV,OAAO,cAAC,EAAD,K,YCGTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d9c2f8f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BsFillMicFill } from \"react-icons/bs\";\nimport { MdClose } from \"react-icons/md\";\nimport { BiReset } from \"react-icons/bi\";\n\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport \"./Dictaphone.css\";\n\nconst Dictaphone = () => {\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n\n  const [inputText, setInputText] = useState(\"\");\n\n  useEffect(() => {\n    setInputText(transcript);\n  }, [transcript]);\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span className=\"h4\">Browser doesn't support speech recognition.</span>;\n  }\n\n  return (\n    <div className=\"main-div col-md-6 offset-md-3 col-sm-8 offset-sm-2 col-10 offset-1\">\n      <div className={`circle1 ${listening ? \"active\" : \"\"}`}></div>\n      <div className={`circle2 ${listening ? \"active\" : \"\"}`}></div>\n      <textarea\n        type=\"text\"\n        rows=\"1\"\n        className=\"form-control input-field shadow\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      <div className=\"control-btns\">\n        <button className=\"btn\" onClick={SpeechRecognition.startListening}>\n          <BsFillMicFill size={24} />\n        </button>\n        {listening ? (\n          <React.Fragment>\n            <button className=\"btn\" onClick={SpeechRecognition.stopListening}>\n              <MdClose size={22} />\n            </button>\n            <button className=\"btn\" onClick={resetTranscript}>\n              <BiReset size={22} />\n            </button>\n          </React.Fragment>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Dictaphone;\n","import \"./App.css\";\nimport Dictaphone from \"./components/Dictaphone\";\n\nconst App = () => {\n  return <Dictaphone />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}